//方法一. 首先计算链表长度，创建数组，然后遍历链表，倒着放入数组即可
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public int[] reversePrint(ListNode head) {
        int size=0;
        ListNode temp=head;
        while (temp!=null)
        {
            size++;
            temp=temp.next;
        }
        int[] nums= new int[size];
        int i=size-1;
        while (head!=null)
        {
            nums[i]=head.val;
            i--;
            head=head.next;
        }
        return nums;
    }
}

//方法二.用栈的先入后出特性，用栈存储链表value然后打印栈即可
class Solution {
    public int[] reversePrint(ListNode head) {
        Stack<Integer>   stack = new Stack<>();
        ListNode temp =head;
        while (temp!=null)
        {
            stack.push(temp.val);
            temp=temp.next;
        }

        int size=stack.size();
        int[] res = new int[size];
        int i=0;
        while (!stack.isEmpty())
        {
            res[i++] = stack.pop();
        }
        return res;
    }
}

//方法三.递归
